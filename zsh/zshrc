#!/usr/bin/env zsh
# Zsh runcom file

fpath+=~/.zfunc

# Source argument on the condition that it exists
condsource() { if [ -e $1 ]; then source $1; fi }

# oh-my-zsh (https://github.com/robbyrussell/oh-my-zsh)
if [ -d "$HOME/.oh-my-zsh" ]; then
    # Path to oh-my-zsh installation
    export ZSH=$HOME/.oh-my-zsh

    # Returns whether the theme exists
    theme_exists() {
        [ -e "$ZSH/custom/themes/$1.zsh-theme" ] || [ -e "$ZSH/themes/$1.zsh-theme" ]
    }

    # Sets the theme to the first one that exists
    set_theme() {
        for theme in "$@"; do
            if theme_exists $theme; then
                ZSH_THEME=$theme
                break 2
            fi
        done
    }

    set_theme "spaceship" "agnoster"

    # Other favorite themes:
    # "gianu"
    # "minimal"
    # "dst"
    # "lambda"
    # "bureau"

    # How often to auto-update (in days)
    export UPDATE_ZSH_DAYS=7

    # Enable command auto-correction
    ENABLE_CORRECTION="true"

    source $ZSH/oh-my-zsh.sh
fi

export PATH=/usr/local/bin:$PATH
export LANG=en_US.UTF-8

# Git subrepo https://github.com/ingydotnet/git-subrepo
condsource "$HOME/git-subrepo/.rc"

# Man syntax highlighting
man() {
    env \
        LESS_TERMCAP_mb=$'\e[1;31m' \
        LESS_TERMCAP_md=$'\e[1;31m' \
        LESS_TERMCAP_me=$'\e[0m' \
        LESS_TERMCAP_se=$'\e[0m' \
        LESS_TERMCAP_so=$'\e[1;44;33m' \
        LESS_TERMCAP_ue=$'\e[0m' \
        LESS_TERMCAP_us=$'\e[1;32m' \
            man "$@"
}

exists() {
    type "$1" > /dev/null
}

e() {
    if [ $# -eq 0 ]; then $EDITOR .; else $EDITOR $@; fi
}

ez() {
    e "$(realpath $HOME/.zshrc)"
}

# Aliases
alias ls='ls --color=always'
alias a='ls -A'
alias please='sudo $(fc -ln -1)'
alias netup='sudo ifconfig en0 up'
alias netdown='sudo ifconfig en0 down'
alias reload='source ~/.zshrc'

# Rust
export PATH="$PATH:$HOME/.cargo/bin"
if exists rustc; then
    export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
fi

# Go
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin:/usr/local/opt/go/libexec/bin"

# Haskell
export PATH="$HOME/Library/Haskell/bin:$PATH"

# Node
NVM_SCRIPT="/usr/local/opt/nvm/nvm.sh"
export NVM_DIR="$HOME/.nvm"
if [ -f "$NVM_SCRIPT" ]; then
    . "$NVM_SCRIPT"
fi

# Swift
if exists swiftenv; then eval "$(swiftenv init -)"; fi

# ZSH syntax highlighting
condsource "$HOME/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# OS-specific settings:
UNAME=`uname`

if [[ "$UNAME" == "Darwin" ]]; then
    #---------------------------------------------------------------------------
    # ~~~~~ macOS ~~~~~
    #---------------------------------------------------------------------------

    # Add coreutils to PATH
    export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

    # Set editor to Visual Studio Code
    if exists code; then export EDITOR='code'; fi

    # brew cask options
    export HOMEBREW_CASK_OPTS="--appdir=/Applications"

    # Android Studio
    export ANDROID_HOME=/usr/local/opt/android-sdk
    export STUDIO_JDK=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk

    # Hide/show desktop
    alias hidedesktop='defaults write com.apple.finder CreateDesktop false; killall Finder'
    alias showdesktop='defaults write com.apple.finder CreateDesktop true; killall Finder'

    # Remove all '.DS_Store' files in the current directory
    alias rmds='find . -name ".DS_Store" -delete'

    # App shortcuts
    alias chrome='open -a "Google Chrome"'
    alias safari='open -a "Safari"'
    alias xcode='open -a "Xcode"'
    alias preview='open -a "Preview"'

    # Current date for sparkle appcast
    alias appcastdate='date --rfc-2822'

elif [[ "$UNAME" == "Linux" ]]; then
    #---------------------------------------------------------------------------
    # ~~~~~ Linux ~~~~~
    #---------------------------------------------------------------------------

    if [[ "$(cat /proc/sys/kernel/osrelease)" =~ .*Microsoft.* ]]; then
        #-----------------------------------------------------------------------
        # ~~~~~ Linux on Windows ~~~~~
        #-----------------------------------------------------------------------

        # Run windows command using cmd.exe
        alias wcmd='/mnt/c/Windows/System32/cmd.exe /C'

        # VS Code
        alias code='wcmd code'

    else
        alias screenfetch='screenfetch -st'
    fi
fi
